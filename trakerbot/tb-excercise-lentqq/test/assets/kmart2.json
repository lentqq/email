{"id":"158ac435a36d6892","threadId":"158ac435a36d6892","labelIds":["UNREAD","IMPORTANT","CATEGORY_UPDATES","INBOX"],"snippet":"Items in order 995454428 have shipped! Kmart Have Questions? VIEW CUSTOMER SERVICE CLOTHING SHOES HOME ELECTRONICS TOYS CLEARANCE Great news, Sky_bargain! The items listed below from Order #995454428,","historyId":"635519","internalDate":"1480358844000","payload":{"partId":"","mimeType":"text/html","filename":"","headers":[{"name":"Delivered-To","value":"mainboxmail1@gmail.com"},{"name":"Received","value":"by 10.103.36.3 with SMTP id k3csp2168439vsk;        Mon, 28 Nov 2016 10:47:25 -0800 (PST)"},{"name":"X-Received","value":"by 10.84.197.165 with SMTP id n34mr53524024pld.34.1480358845283;        Mon, 28 Nov 2016 10:47:25 -0800 (PST)"},{"name":"Return-Path","value":"<kmartri2.6110@envfrm.rsys2.com>"},{"name":"Received","value":"from omptrans.value.kmart.com (omptrans.value.kmart.com. [199.7.205.107])        by mx.google.com with ESMTPS id a128si56288240pfa.23.2016.11.28.10.47.24        for <mainboxmail1@gmail.com>        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);        Mon, 28 Nov 2016 10:47:25 -0800 (PST)"},{"name":"Received-SPF","value":"fail (google.com: domain of kmartri2.6110@envfrm.rsys2.com does not designate 199.7.205.107 as permitted sender) client-ip=199.7.205.107;"},{"name":"Authentication-Results","value":"mx.google.com;       dkim=pass header.i=@value.kmart.com;       dkim=pass header.i=@responsys.net;       dkim=pass header.i=@responsys.net;       spf=fail (google.com: domain of kmartri2.6110@envfrm.rsys2.com does not designate 199.7.205.107 as permitted sender) smtp.mailfrom=kmartri2.6110@envfrm.rsys2.com;       dmarc=pass (p=NONE dis=NONE) header.from=value.kmart.com"},{"name":"DKIM-Signature","value":"v=1; a=rsa-sha1; c=relaxed/relaxed; s=kmart; d=value.kmart.com; h=MIME-Version:Content-Type:Content-Transfer-Encoding:Date:To:From:Reply-To:Subject:Feedback-ID:Message-ID; i=kmart@value.kmart.com; bh=6ilKIB5k8liAGzDbEz8N/bi+A24=; b=R25BdkGenybiA2bu7qflm/WombLeYzl0CtB56lQ0SGeTTluCTKf07ayR3w9Z5YQWh4YCe2lrqQti   Al8coTZjmKqrfqqoTRTYlDz3hLDmr9pWyj/3VCeSLHiahj/vPBzMFID/Dd2SfJtIdYNVvqc0gsvs   8VvTgGLAlbuJ9Wwy3HY="},{"name":"DKIM-Signature","value":"v=1; a=rsa-sha1; c=relaxed/relaxed; s=oraclersys; d=responsys.net; h=MIME-Version:Content-Type:Content-Transfer-Encoding:Date:To:From:Reply-To:Subject:Feedback-ID:Message-ID; bh=6ilKIB5k8liAGzDbEz8N/bi+A24=; b=Wmjwj8AVKoaPlEwRUnjX/+s89g7Hjzp3c1PdWJaOhVlWHU3Z1prJxp841098y4A4KU/ITeBFUGQC   gmkY8LLkspMxY3r19716iHhG/shQDCNeTXRCGl+GK+d71yocnb5q3/UCEreRMHKDAciPQLkwFTAp   rI070gPmDwPqkfavrcA="},{"name":"DomainKey-Signature","value":"a=rsa-sha1; c=nofws; q=dns; s=kmart; d=value.kmart.com; b=tFk6WmlROG+P/eiPK5Mh1f6Zli5yafwFtjpbzzq2pmx+0Fc8CvaQmWvIkdSZgD+fSTFhbOM43dBF   hGsxotRsBKjfNKD/beJ7OEpz8rPBbpTS/Rmw6e6T62RmVbsV5Ym+6hdmHyn5CSKU0U++fvakXdau   uuiOGx4VTuBrFmaU0Go=;"},{"name":"Received","value":"by omptrans.value.kmart.com id h7htrq161eg3 for <mainboxmail1@gmail.com>; Mon, 28 Nov 2016 10:47:24 -0800 (envelope-from <kmartri2.6110@envfrm.rsys2.com>)"},{"name":"X-CSA-Complaints","value":"whitelist-complaints@eco.de"},{"name":"DKIM-Signature","value":"v=1; a=rsa-sha1; c=relaxed/relaxed; s=oraclersys; d=responsys.net; h=MIME-Version:Content-Type:Content-Transfer-Encoding:Date:To:From:Reply-To:Subject:Feedback-ID:Message-ID; bh=6ilKIB5k8liAGzDbEz8N/bi+A24=; b=Wmjwj8AVKoaPlEwRUnjX/+s89g7Hjzp3c1PdWJaOhVlWHU3Z1prJxp841098y4A4KU/ITeBFUGQC   gmkY8LLkspMxY3r19716iHhG/shQDCNeTXRCGl+GK+d71yocnb5q3/UCEreRMHKDAciPQLkwFTAp   rI070gPmDwPqkfavrcA="},{"name":"Received","value":"by mta109-dc1.prod.responsys.com id h7htro160qos for <mainboxmail1@gmail.com>; Mon, 28 Nov 2016 10:47:24 -0800 (envelope-from <kmartri2.6110@envfrm.rsys2.com>)"},{"name":"X-CSA-Complaints","value":"whitelist-complaints@eco.de"},{"name":"MIME-Version","value":"1.0"},{"name":"Content-Type","value":"text/html; charset=\"UTF-8\""},{"name":"Content-Transfer-Encoding","value":"quoted-printable"},{"name":"Date","value":"Mon, 28 Nov 2016 10:47:24 -0800"},{"name":"To","value":"mainboxmail1@gmail.com"},{"name":"From","value":"Kmart <kmart@value.kmart.com>"},{"name":"Reply-To","value":"Kmart <donotreply@customerservice.kmart.com>"},{"name":"Subject","value":"Your 48 In. Outdoor Christmas ... have shipped!"},{"name":"Feedback-ID","value":"6110:762772:oraclersys"},{"name":"X-sgxh1","value":"uHpgIhzfuHptSxnuHptQJhu"},{"name":"X-rext","value":"5.interact2.EpWzmaTtmrXrU0NcVLGAQj15mr5e1lrkZ8fZbH3-nHSeUUNTSLiw"},{"name":"X-cid","value":"kmartri2.1217532"},{"name":"Message-ID","value":"<0.1.EF.17E.1D249A7DBED40F4.0@mta109-dc1.prod.responsys.com>"}],"body":{"size":99157,"data":""}},"sizeEstimate":118761}