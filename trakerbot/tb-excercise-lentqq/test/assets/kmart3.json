{"id":"158eeb22a17ef624","threadId":"158ee158ebbc1952","labelIds":["UNREAD","CATEGORY_PERSONAL","INBOX"],"snippet":"Items in order 997604181 have shipped! Kmart Have Questions? VIEW CUSTOMER SERVICE CLOTHING SHOES HOME ELECTRONICS TOYS CLEARANCE Great news, Valentin! The items listed below from Order #997604181,","historyId":"437478","internalDate":"1481473403000","payload":{"partId":"","mimeType":"text/html","filename":"","headers":[{"name":"Delivered-To","value":"katq.d89@gmail.com"},{"name":"Received","value":"by 10.28.215.4 with SMTP id o4csp1192677wmg;        Sun, 11 Dec 2016 08:23:24 -0800 (PST)"},{"name":"X-Received","value":"by 10.99.167.15 with SMTP id d15mr159068705pgf.167.1481473403953;        Sun, 11 Dec 2016 08:23:23 -0800 (PST)"},{"name":"Return-Path","value":"<kmartri2.6110@envfrm.rsys2.com>"},{"name":"Received","value":"from omptrans.value.kmart.com (omptrans.value.kmart.com. [12.130.138.107])        by mx.google.com with ESMTPS id d17si40659155pgi.176.2016.12.11.08.23.23        for <katq.d89@gmail.com>        (version=TLS1_2 cipher=ECDHE-RSA-AES128-GCM-SHA256 bits=128/128);        Sun, 11 Dec 2016 08:23:23 -0800 (PST)"},{"name":"Received-SPF","value":"pass (google.com: domain of kmartri2.6110@envfrm.rsys2.com designates 12.130.138.107 as permitted sender) client-ip=12.130.138.107;"},{"name":"Authentication-Results","value":"mx.google.com;       dkim=pass header.i=@account.kmart.com;       dkim=pass header.i=@responsys.net;       spf=pass (google.com: domain of kmartri2.6110@envfrm.rsys2.com designates 12.130.138.107 as permitted sender) smtp.mailfrom=kmartri2.6110@envfrm.rsys2.com;       dmarc=pass (p=REJECT dis=NONE) header.from=account.kmart.com"},{"name":"DKIM-Signature","value":"v=1; a=rsa-sha1; c=relaxed/relaxed; s=kmart7; d=account.kmart.com; h=MIME-Version:Content-Type:Content-Transfer-Encoding:Date:To:From:Reply-To:Subject:Feedback-ID:Message-ID; i=kmart@account.kmart.com; bh=Ct8Eph64uyUMVzYKMtTz+1Jp6tU=; b=TlxLg+mgwE8znvoPfvtfXmjLo5EyKRY1tdIsrZiQ+YG5BnH99u3IvBOHhlfVn2/hSrBA1J1jHZsY   6aj78sFEAsHBcB3oFg/Qmv1Xv7gFE2T+FwuKkG/MVaQccSaBLCpEx5108rCeEgNmd+GQR5BBwT+f   zK3Is1CQ3pATgUmUxK8="},{"name":"DKIM-Signature","value":"v=1; a=rsa-sha1; c=relaxed/relaxed; s=oraclersys; d=responsys.net; h=MIME-Version:Content-Type:Content-Transfer-Encoding:Date:To:From:Reply-To:Subject:Feedback-ID:Message-ID; bh=Ct8Eph64uyUMVzYKMtTz+1Jp6tU=; b=YqXGb3733p+jIsX3Lrsli+4GXhWNbRgOugaztfzTxj+kPEvulhpaglrtBWFrVuiqRxCnIdP+c5cn   hN3B65KqeNOz1J3HZpM6THKujQjwqeqq3GTb/9BNekLmCMZP+/TaBQRl5crAhEw8F/Z4aKhU4BCS   Og2N+8tC76Ej9XPpPgI="},{"name":"DomainKey-Signature","value":"a=rsa-sha1; c=nofws; q=dns; s=kmart7; d=account.kmart.com; b=UTnjic8bcVzqgBHqDX2nvezIT/UyEbbW3uwbw/plqa+Rb3mubFKFWxuK8JIJkyNwIMQtXiL+MSxy   ETETGNhMOTa92BWFp/IK4fs1FyferoHLpIxLijBegLKCilVeCACrAaYW0wZ97CtEdFgenbF3Txgv   f1jDN39QW4rNUhbCHAw=;"},{"name":"Received","value":"by omptrans.value.kmart.com id h9luom16170s for <katq.d89@gmail.com>; Sun, 11 Dec 2016 08:23:38 -0800 (envelope-from <kmartri2.6110@envfrm.rsys2.com>)"},{"name":"X-CSA-Complaints","value":"whitelist-complaints@eco.de"},{"name":"MIME-Version","value":"1.0"},{"name":"Content-Type","value":"text/html; charset=\"UTF-8\""},{"name":"Content-Transfer-Encoding","value":"quoted-printable"},{"name":"Date","value":"Sun, 11 Dec 2016 08:23:23 -0800"},{"name":"To","value":"katq.d89@gmail.com"},{"name":"From","value":"Kmart <kmart@account.kmart.com>"},{"name":"Reply-To","value":"Kmart <donotreply@customerservice.kmart.com>"},{"name":"Subject","value":"Your Interactive Deluxe Cash R... have shipped!"},{"name":"Feedback-ID","value":"6110:762772:oraclersys"},{"name":"X-sgxh1","value":"sHlzbQKCDxnuHptQJhu"},{"name":"X-rext","value":"5.interact2.EpWzmaTtmrXrU0NcVLGAQj35ncTrMbVQSnQSPtat-eTAnuyZwdl2"},{"name":"X-cid","value":"kmartri2.1217532"},{"name":"Message-ID","value":"<0.0.8F.B79.1D253CAEDD7C88E.0@omptrans.value.kmart.com>"}],"body":{"size":95897,"data":""}},"sizeEstimate":114355}